openshift:
  scc:
    nonroot: false #if you want to ass nonroot scc to default sa
  patchNs:
    enabled: true #if you want to patch ns to allow uid and fsgroup 10000
  zalandoOperator:
    namespace: postgres-zalando-operator
    serviceAccount: postgres-zalando-operator-postgres-operator
    createAdditionalRBAC: true
    

external-dns:
  enabled: true
  podSecurityContext:
    fsGroup: 10000
    runAsUser: 10000
  provider: aws
  txtOwnerId: Z0465218S9L230WGWNJK
  domainFilters: 
    - thadvatys.com
  txtPrefix: txt
  aws:
    zoneType: public
    credentials:
      secretName: "aws-config-secret"
    vault:
      address: "http://vault.vault.svc.cluster.local:8200"
      path: kubernetes
      role: webhook
      skipVerify: "true"
      secret:
        location: secret/data/aws/config #aws secrets in vault
        credentials: credentials #name of aws credentials's key in vault secret

version: 2.3.3


core:
  ingress:
    hostname: harbor.example.com
    class: nginx
    issuer:
      create: false
      kind: Issuer #ClusterIssuer
      name: letsencrypt-production-http
      acme:
        email: tarik.haddouchi@advatys.com
        server: https://acme-v02.api.letsencrypt.org/directory
  oidc:
    enabled: true
    name: "keycloak"
    endpoint: "http://keycloak-keycloak.apps.sandbox.thadvatys.com/auth/realms/harbor"
    clientId: "harbor"
    groupsClaim: "harbor"
    adminGroup: "/admin" 
    scope: "openid,offline_access,profile,email"
    verifyCert: false
        

registry:
  storage:
    registryPersistentVolume:
      size: 20Gi



trivy:
  storage:
    cachePersistentVolume:
      size: 10Gi
    reportsPersistentVolume:
      size: 10Gi

postgres-operator:
  enabled: false
  image:
    registry: registry.opensource.zalan.do
    repository: acid/postgres-operator
    tag: v1.7.0
  securityContext:
    runAsUser: null
    runAsNonRoot: true
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
  #configGeneral:
    # Select if setup uses endpoints (default), or configmaps to manage leader (DCS=k8s)
    #kubernetes_use_configmaps: true
  configKubernetes:
    enable_pod_antiaffinity: false
    delete_annotation_name_key: "harbor-cluster"
    watched_namespace: "*"

redis:
  master:
    persistence:
      size: 5Gi
    podSecurityContext:
      enabled: false
    containerSecurityContext:
      enabled: false
  replica:
    persistence:
      size: 8Gi
    podSecurityContext:
      enabled: false
    containerSecurityContext:
      enabled: false 
  
